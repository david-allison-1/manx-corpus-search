@* See BrowseController.cs *@
@using CorpusSearch.Model

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <style>
    .noteRow {
       background-color: aliceblue;
       font-size: small;
       padding: 0.15rem;
       text-align: center;
    }
    table tbody tr td {
        text-align: justify;
    }
    table tbody tr.noteRow td {
        text-align: inherit;
    }
    </style>
</head>
<body>
<h1 style="margin: 24px"><a href="javascript:history.back()" style="text-decoration: none">⇦</a> @ViewData["Title"]</h1>

<div class="text-center d-flex justify-content-center" style="flex-wrap: wrap; margin-bottom: 20px">
    <a class="lead font-weight-bold" style="margin-right: 24px; margin-left: 24px; margin-bottom: 6px" href="/docs/@ViewData["docId"]">View in Corpus</a>
    @if (ViewData["GitHubLink"] != null)
    {
        <a class="lead font-weight-bold" style="margin-right: 24px; margin-left: 24px; margin-bottom: 6px" href="@ViewData["GitHubLink"]">Edit on GitHub</a>
    }
    @if (ViewData["DownloadText"] != null)
    {
        <a class="lead font-weight-bold" style="margin-right: 24px; margin-left: 24px; margin-bottom: 6px" href="@ViewData["DownloadText"]">Download Text (CSV)</a>
    }
    @if (ViewData["DownloadMetadata"] != null)
    {
        <a class="lead font-weight-bold" style="margin-right: 24px; margin-left: 24px; margin-bottom: 6px" href="@ViewData["DownloadMetadata"]">Download Metadata (JSON)</a>
    }
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>

@{
    List<string> SplitNotesToLines(string input)
    {
        // Stop us adding an additional '[' prefix on the first element
        var firstWasBrace = input.FirstOrDefault() == '[';
        var splitOnBrace = input.Split("[", StringSplitOptions.RemoveEmptyEntries)
            .Select((x, i) => i == 0 && !firstWasBrace ? x : "[" + x) // if we split out the [, put it back
            .Where(x => x.Trim() != "[");

        return splitOnBrace
            .SelectMany(x =>
            {
                var index = x.IndexOf(". ", StringComparison.Ordinal);
                // if there's only two strings and the second is small, don't split on .
                // This stops (Cregeen) or (Kelly) ending up on the second line
                if (index == -1 || (x.Length - index < 150)) 
                {
                    return [x];
                }
                return new [] { x[..(index + 1)], x[(index + 1)..] }.Where(s => !string.IsNullOrEmpty(s));
            })
            .ToList();
    }
}

@* TODO: Add all fields from the JSON here *@

@{
    var manxOnLeftSide = ViewData["OriginalLanguage"]?.ToString() != "English";
}

<table class='table table-striped text-center' style="table-layout: fixed; width: 100%">
<thead>
<tr>
    <th class="text-center" style="width: 50%">@(manxOnLeftSide ? "Manx" : "English")</th>
    <th class="text-center" style="width: 50%">@(manxOnLeftSide ? "English" : "Manx")</th>
</tr>
</thead>
    <tbody>
        @foreach (var line in ViewData["Lines"] as List<DocumentLine> ?? [])
        {
            <tr>
                <td>
                    @(manxOnLeftSide ? line.Manx : line.English) 
                </td>
                <td>
                    @(manxOnLeftSide ? line.English : line.Manx)
                </td>
                    @* {line.page != null && response.pdfLink && *@
                    @* <a href={response.pdfLink + "#page=" + line.page} target="_blank" rel="noreferrer">p{line.page}</a> } *@
                    @* {response.gitHubLink && *@
                    @* <a href={`${response.gitHubLink}#L${line.csvLineNumber}`}> *@
                    @*     edit *@
                    @* </a>} *@
            </tr>
            @if (!string.IsNullOrEmpty(line.Notes))
            {
                <tr class="noteRow">
                <td colSpan="3">
                    @foreach (var note in line.Notes.Split("\\n").SelectMany(SplitNotesToLines))
                    {
                        <div style="max-width: 75%; margin: auto"> 
                            @note
                        </div>
                    }
                </td></tr>
            }
        }
    </tbody>
</table>


</body>
</html>


